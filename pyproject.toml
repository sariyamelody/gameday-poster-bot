[project]
name = "mariners-bot"
version = "0.1.0"
description = "Seattle Mariners Gameday Telegram Bot"
authors = [
    {name = "misty", email = "misty@example.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "python-telegram-bot>=20.7",
    "aiohttp>=3.9",
    "apscheduler>=3.10",
    "sqlalchemy>=2.0",
    "alembic>=1.12",
    "pydantic>=2.5",
    "pydantic-settings>=2.0",
    "pytz>=2023.3",
    "tenacity>=8.2",
    "opentelemetry-api>=1.36",
    "opentelemetry-sdk>=1.36",
    "opentelemetry-exporter-otlp>=1.36",
    "opentelemetry-instrumentation-aiohttp-client>=0.57b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.57b0",
    "structlog>=23.2",
    "uvloop>=0.19",
    "click>=8.1",
    "aiosqlite>=0.19",
    "fastapi>=0.104",
    "uvicorn>=0.24",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21",
    "ruff>=0.1",
    "mypy>=1.7",
    "bandit>=1.7",
    "pre-commit>=3.0",
]

[project.scripts]
mariners-bot = "mariners_bot.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mariners_bot"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21",
    "ruff>=0.1",
    "mypy>=1.7",
    "bandit>=1.7",
    "pre-commit>=3.0",
    "types-pytz>=2025.2.0.20250809",
    "types-requests>=2.32.4.20250809",
    "types-psutil>=6.1.0.20241106",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["mariners_bot"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
